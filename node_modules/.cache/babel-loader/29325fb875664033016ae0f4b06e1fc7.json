{"ast":null,"code":"var _jsxFileName = \"/home/elia/projects/ReactChallenge/src/components/CalendarNotificationForm.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport TextField from '@mui/material/TextField';\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\nimport { TimePicker } from '@mui/x-date-pickers/TimePicker';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeModalState, changeCreationModalState } from '../reducers/notificationSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CalendarNotificationForm() {\n  _s();\n\n  const open = useSelector(state => state.notifications.notificationCreationModalState);\n  const [value, setValue] = React.useState < Date | null > new Date('2014-08-18T21:11:54');\n\n  const handleChange = newValue => {\n    setValue(newValue);\n  };\n\n  const dispatch = useDispatch();\n\n  const handleClickOpen = () => {\n    dispatch(changeCreationModalState(\"\"));\n  };\n\n  const handleClose = () => {\n    dispatch(changeCreationModalState(\"\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleClickOpen,\n      children: \"Open form dialog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: [\"New reminder\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          id: \"standard-basic\",\n          label: \"Notification\",\n          variant: \"standard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TimePicker, {\n          label: \"Time\",\n          value: value,\n          onChange: handleChange,\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(CountryDropdown, {\n          value: country,\n          onChange: val => this.selectCountry(val)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(RegionDropdown, {\n          country: country,\n          value: region,\n          onChange: val => this.selectRegion(val)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Create Notification\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CalendarNotificationForm, \"z2uOA1bdOhmLAOBFtcp5bY6dWb8=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CalendarNotificationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarNotificationForm\");","map":{"version":3,"sources":["/home/elia/projects/ReactChallenge/src/components/CalendarNotificationForm.jsx"],"names":["React","Box","Button","Dialog","DialogActions","DialogContent","DialogTitle","TextField","CountryDropdown","RegionDropdown","CountryRegionData","TimePicker","useSelector","useDispatch","changeModalState","changeCreationModalState","CalendarNotificationForm","open","state","notifications","notificationCreationModalState","value","setValue","useState","Date","handleChange","newValue","dispatch","handleClickOpen","handleClose","params","country","val","selectCountry","region","selectRegion"],"mappings":";;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,GAAP,MAAgB,mBAAhB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,eAAT,EAA0BC,cAA1B,EAA0CC,iBAA1C,QAAmE,+BAAnE;AAEA,SAASC,UAAT,QAA2B,gCAA3B;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,gBAAT,EAA2BC,wBAA3B,QAA0D,+BAA1D;;AAEA,eAAe,SAASC,wBAAT,GAAoC;AAAA;;AAC/C,QAAMC,IAAI,GAAGL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,aAAN,CAAoBC,8BAAhC,CAAxB;AAGA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBtB,KAAK,CAACuB,QAAN,GAAeC,IAAf,GAAsB,OAC5C,IAAIA,IAAJ,CAAS,qBAAT,CADJ;;AAIA,QAAMC,YAAY,GAAIC,QAAD,IAA2B;AAC5CJ,IAAAA,QAAQ,CAACI,QAAD,CAAR;AACH,GAFD;;AAIA,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;;AAEA,QAAMe,eAAe,GAAG,MAAM;AAC1BD,IAAAA,QAAQ,CAACZ,wBAAwB,CAAC,EAAD,CAAzB,CAAR;AACH,GAFD;;AAIA,QAAMc,WAAW,GAAG,MAAM;AACtBF,IAAAA,QAAQ,CAACZ,wBAAwB,CAAC,EAAD,CAAzB,CAAR;AACH,GAFD;;AAIA,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,OAAO,EAAC,UAAhB;AAA2B,MAAA,OAAO,EAAEa,eAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,MAAD;AACA,MAAA,IAAI,EAAEX,IADN;AAEA,MAAA,OAAO,EAAEY,WAFT;AAAA,8BAGA,QAAC,WAAD;AAAA,mBAAc,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA,cAHA,eAIA,QAAC,aAAD;AAAA,gCACI,QAAC,SAAD;AAAW,UAAA,EAAE,EAAC,gBAAd;AAA+B,UAAA,KAAK,EAAC,cAArC;AAAoD,UAAA,OAAO,EAAC;AAA5D;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,UAAD;AACI,UAAA,KAAK,EAAC,MADV;AAEI,UAAA,KAAK,EAAER,KAFX;AAGI,UAAA,QAAQ,EAAEI,YAHd;AAII,UAAA,WAAW,EAAGK,MAAD,iBAAY,QAAC,SAAD,OAAeA;AAAf;AAAA;AAAA;AAAA;AAAA;AAJ7B;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAQI,QAAC,eAAD;AACI,UAAA,KAAK,EAAEC,OADX;AAEI,UAAA,QAAQ,EAAGC,GAAD,IAAS,KAAKC,aAAL,CAAmBD,GAAnB;AAFvB;AAAA;AAAA;AAAA;AAAA,gBARJ,eAWI,QAAC,cAAD;AACI,UAAA,OAAO,EAAED,OADb;AAEI,UAAA,KAAK,EAAEG,MAFX;AAGI,UAAA,QAAQ,EAAGF,GAAD,IAAS,KAAKG,YAAL,CAAkBH,GAAlB;AAHvB;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAJA,eAoBA,QAAC,aAAD;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEH,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEA,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cApBA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH;;GAtDuBb,wB;UACPJ,W,EAWIC,W;;;KAZGG,wB","sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport TextField from '@mui/material/TextField';\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\n\nimport { TimePicker } from '@mui/x-date-pickers/TimePicker';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeModalState, changeCreationModalState} from '../reducers/notificationSlice';\n\nexport default function CalendarNotificationForm() {\n    const open = useSelector((state) => state.notifications.notificationCreationModalState);\n    \n\n    const [value, setValue] = React.useState<Date | null>(\n        new Date('2014-08-18T21:11:54')\n    );\n\n    const handleChange = (newValue: Date | null) => {\n        setValue(newValue);\n    };\n\n    const dispatch = useDispatch();\n\n    const handleClickOpen = () => {\n        dispatch(changeCreationModalState(\"\"));\n    };\n\n    const handleClose = () => {\n        dispatch(changeCreationModalState(\"\"));\n    };\n\n    return (\n        <div>\n            <Button variant=\"outlined\" onClick={handleClickOpen}>\n            Open form dialog\n            </Button>\n            <Dialog\n            open={open}\n            onClose={handleClose}>\n            <DialogTitle>{\"New reminder\"} </DialogTitle>\n            <DialogContent>\n                <TextField id=\"standard-basic\" label=\"Notification\" variant=\"standard\" />\n                <TimePicker\n                    label=\"Time\"\n                    value={value}\n                    onChange={handleChange}\n                    renderInput={(params) => <TextField {...params} />}\n                />\n                <CountryDropdown\n                    value={country}\n                    onChange={(val) => this.selectCountry(val)} />\n                <RegionDropdown\n                    country={country}\n                    value={region}\n                    onChange={(val) => this.selectRegion(val)} />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose}>Cancel</Button>\n                <Button onClick={handleClose}>Create Notification</Button>\n            </DialogActions>\n            </Dialog>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}