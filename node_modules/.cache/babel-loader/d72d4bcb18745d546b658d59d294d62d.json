{"ast":null,"code":"var _jsxFileName = \"/home/elia/projects/ReactChallenge/src/components/CalendarNotifications.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeModalState, changeCreationModalState, deleteNotification } from '../reducers/notificationSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction generate(handleEditForm, handleDeleteClick, elements) {\n  let components = [];\n  elements.forEach(function (element) {\n    components.push( /*#__PURE__*/_jsxDEV(ListItem, {\n      button: true,\n      onClick: handleEditForm.bind(this, element),\n      secondaryAction: /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: handleDeleteClick.bind(this, element),\n        edge: \"end\",\n        \"aria-label\": \"delete\",\n        children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(ListItemText, {\n        primary: element.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, element.date, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this));\n  });\n  return components;\n}\n\nexport default function CalendarNotifications() {\n  _s();\n\n  const open = useSelector(state => state.notifications.notificationModalState);\n  const monthObject = useSelector(state => state.notifications.monthObject);\n  const monthName = useSelector(state => state.date.monthName);\n  const year = useSelector(state => state.date.year);\n  const dayNotifications = useSelector(state => state.notifications.dayNotifications);\n  const dispatch = useDispatch();\n\n  const handleClickOpen = () => {\n    dispatch(changeModalState(\"\"));\n  };\n\n  const handleClose = () => {\n    dispatch(changeModalState(\"\"));\n  };\n\n  const handleEditForm = element => {\n    dispatch(changeCreationModalState(\"\"));\n  };\n\n  const handleDeleteClick = (element, event) => {\n    dispatch(deleteNotification(element));\n    event.stopPropagation();\n  };\n\n  let dialogTitle = \"Reminders - \";\n\n  if (typeof monthObject != 'undefined') {\n    dialogTitle = dialogTitle + monthObject.payload.monthDay + \" of \" + monthName + \" of \" + year;\n  } else {\n    dialogTitle = dialogTitle + monthName + \" of \" + year;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleClickOpen,\n      children: \"Open form dialog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: [dialogTitle, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(List, {\n          sx: {\n            width: '100%',\n            bgcolor: 'background.paper'\n          },\n          children: generate(handleEditForm, handleDeleteClick, dayNotifications)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleEditForm,\n          children: \"Create Reminder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 7\n  }, this);\n}\n\n_s(CalendarNotifications, \"y8TApo6WA+ApDO5Hgom8ftjrGCU=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = CalendarNotifications;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarNotifications\");","map":{"version":3,"sources":["/home/elia/projects/ReactChallenge/src/components/CalendarNotifications.jsx"],"names":["React","Button","Dialog","DialogActions","DialogContent","DialogTitle","List","ListItem","ListItemText","IconButton","DeleteIcon","useSelector","useDispatch","changeModalState","changeCreationModalState","deleteNotification","generate","handleEditForm","handleDeleteClick","elements","components","forEach","element","push","bind","description","date","CalendarNotifications","open","state","notifications","notificationModalState","monthObject","monthName","year","dayNotifications","dispatch","handleClickOpen","handleClose","event","stopPropagation","dialogTitle","payload","monthDay","width","bgcolor"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\n\n\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport IconButton from '@mui/material/IconButton';\nimport DeleteIcon from '@mui/icons-material/Delete';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeModalState, changeCreationModalState, deleteNotification } from '../reducers/notificationSlice';\n\n\nfunction generate(handleEditForm, handleDeleteClick, elements) {\n  let components = [];\n\n  elements.forEach(function (element) {\n    components.push(\n      <ListItem\n        key={element.date}\n        button\n        onClick={handleEditForm.bind(this, element)}\n        secondaryAction={\n          <IconButton\n            onClick={handleDeleteClick.bind(this, element)}\n            edge=\"end\" aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        }>\n        <ListItemText\n          primary={element.description}\n        />\n      </ListItem>)\n  });\n\n  return components;\n}\n\nexport default function CalendarNotifications() {\n    const open = useSelector((state) => state.notifications.notificationModalState);\n    const monthObject = useSelector((state) => state.notifications.monthObject);\n    const monthName = useSelector((state) => state.date.monthName);\n    const year = useSelector((state) => state.date.year);\n    const dayNotifications = useSelector((state) => state.notifications.dayNotifications);\n\n    const dispatch = useDispatch();\n\n    const handleClickOpen = () => {\n        dispatch(changeModalState(\"\"));\n    };\n\n    const handleClose = () => {\n        dispatch(changeModalState(\"\"));\n    };\n\n    const handleEditForm = (element) => {\n        dispatch(changeCreationModalState(\"\"));\n    };\n\n    const handleDeleteClick = (element, event) => {\n        dispatch(deleteNotification(element));\n        event.stopPropagation();\n    };\n\n    let dialogTitle = \"Reminders - \";\n\n    if (typeof(monthObject) != 'undefined') {\n      dialogTitle = dialogTitle + monthObject.payload.monthDay + \" of \" + monthName + \" of \" + year;\n    } else {\n      dialogTitle = dialogTitle + monthName + \" of \" + year;\n    }\n\n    return (\n      <div>\n          <Button variant=\"outlined\" onClick={handleClickOpen}>\n          Open form dialog\n          </Button>\n          <Dialog\n            open={open}\n            onClose={handleClose}>\n          <DialogTitle>{dialogTitle} </DialogTitle>\n          <DialogContent>\n              <List sx={{ width: '100%', bgcolor: 'background.paper' }}>\n                {generate(handleEditForm, handleDeleteClick, dayNotifications)}\n              </List>\n          </DialogContent>\n          <DialogActions>\n              <Button onClick={handleClose}>Cancel</Button>\n              <Button onClick={handleEditForm}>Create Reminder</Button>\n          </DialogActions>\n          </Dialog>\n      </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}