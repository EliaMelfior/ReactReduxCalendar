{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const notificationSlice = createSlice({\n  name: 'notifications',\n  initialState: {\n    notificationModalState: false,\n    notificationCreationModalState: false,\n    allNotifications: [],\n    dayNotifications: [],\n    currentDay: '',\n    monthObject: ''\n  },\n  reducers: {\n    createNotification: (state, notificationObj) => {\n      state.allNotifications.push(notificationObj.payload);\n      state.notificationCreationModalState = false;\n      state.notificationModalState = false;\n    },\n    deleteNotification: (state, notificatinoObj) => {\n      /*\n      state.notifications.filter((item) => {\n          return (item.id != notificationId);\n      });*/\n    },\n    editNotification: (state, notificationId) => {},\n    changeModalState: (state, monthObject) => {\n      let allNotifications = state.allNotifications;\n      state.currentDay = monthObject.payload;\n      state.dayNotifications = allNotifications.filter(notification => {\n        let notificationDate = new Date(notification.date);\n        let currentDayDate = new Date(state.currentDay);\n        return notificationDate.getFullYear() === currentDayDate.getFullYear() && notificationDate.getMonth() === currentDayDate.getMonth() && notificationDate.getDate() === currentDayDate.getDate();\n      });\n      state.monthObject = monthObject;\n      state.notificationModalState = !state.notificationModalState;\n    },\n    changeCreationModalState: (state, monthObject) => {\n      state.monthObject = monthObject;\n      state.notificationModalState = false;\n      state.notificationCreationModalState = !state.notificationCreationModalState;\n    }\n  }\n});\nexport const {\n  createNotification,\n  deleteNotification,\n  editNotification,\n  changeModalState,\n  changeCreationModalState\n} = notificationSlice.actions;\nexport default notificationSlice.reducer;","map":{"version":3,"sources":["/home/elia/projects/ReactChallenge/src/reducers/notificationSlice.js"],"names":["createSlice","notificationSlice","name","initialState","notificationModalState","notificationCreationModalState","allNotifications","dayNotifications","currentDay","monthObject","reducers","createNotification","state","notificationObj","push","payload","deleteNotification","notificatinoObj","editNotification","notificationId","changeModalState","filter","notification","notificationDate","Date","date","currentDayDate","getFullYear","getMonth","getDate","changeCreationModalState","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,iBAAiB,GAAGD,WAAW,CAAC;AACzCE,EAAAA,IAAI,EAAE,eADmC;AAEzCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,sBAAsB,EAAE,KADd;AAEVC,IAAAA,8BAA8B,EAAE,KAFtB;AAGVC,IAAAA,gBAAgB,EAAE,EAHR;AAIVC,IAAAA,gBAAgB,EAAE,EAJR;AAKVC,IAAAA,UAAU,EAAE,EALF;AAMVC,IAAAA,WAAW,EAAE;AANH,GAF2B;AAUzCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,kBAAkB,EAAE,CAACC,KAAD,EAAQC,eAAR,KAA4B;AAC5CD,MAAAA,KAAK,CAACN,gBAAN,CAAuBQ,IAAvB,CAA4BD,eAAe,CAACE,OAA5C;AACAH,MAAAA,KAAK,CAACP,8BAAN,GAAuC,KAAvC;AACAO,MAAAA,KAAK,CAACR,sBAAN,GAA+B,KAA/B;AACH,KALK;AAMNY,IAAAA,kBAAkB,EAAE,CAACJ,KAAD,EAAQK,eAAR,KAA4B;AAC5C;AACZ;AACA;AACA;AACS,KAXK;AAYNC,IAAAA,gBAAgB,EAAE,CAACN,KAAD,EAAQO,cAAR,KAA2B,CAE5C,CAdK;AAeNC,IAAAA,gBAAgB,EAAE,CAACR,KAAD,EAAQH,WAAR,KAAwB;AACtC,UAAIH,gBAAgB,GAAGM,KAAK,CAACN,gBAA7B;AAEAM,MAAAA,KAAK,CAACJ,UAAN,GAAmBC,WAAW,CAACM,OAA/B;AAEAH,MAAAA,KAAK,CAACL,gBAAN,GAAyBD,gBAAgB,CAACe,MAAjB,CAA0BC,YAAD,IAAkB;AAChE,YAAIC,gBAAgB,GAAG,IAAIC,IAAJ,CAASF,YAAY,CAACG,IAAtB,CAAvB;AACA,YAAIC,cAAc,GAAG,IAAIF,IAAJ,CAASZ,KAAK,CAACJ,UAAf,CAArB;AAEA,eAAQe,gBAAgB,CAACI,WAAjB,OAAmCD,cAAc,CAACC,WAAf,EAAnC,IACRJ,gBAAgB,CAACK,QAAjB,OAAgCF,cAAc,CAACE,QAAf,EADxB,IAERL,gBAAgB,CAACM,OAAjB,OAA+BH,cAAc,CAACG,OAAf,EAF/B;AAGH,OAPwB,CAAzB;AASAjB,MAAAA,KAAK,CAACH,WAAN,GAAoBA,WAApB;AACAG,MAAAA,KAAK,CAACR,sBAAN,GAA+B,CAACQ,KAAK,CAACR,sBAAtC;AACH,KA/BK;AAgCN0B,IAAAA,wBAAwB,EAAE,CAAClB,KAAD,EAAQH,WAAR,KAAwB;AAC9CG,MAAAA,KAAK,CAACH,WAAN,GAAoBA,WAApB;AACAG,MAAAA,KAAK,CAACR,sBAAN,GAA+B,KAA/B;AACAQ,MAAAA,KAAK,CAACP,8BAAN,GAAuC,CAACO,KAAK,CAACP,8BAA9C;AACH;AApCK;AAV+B,CAAD,CAArC;AAkDP,OAAO,MAAM;AAAEM,EAAAA,kBAAF;AAAsBK,EAAAA,kBAAtB;AAA0CE,EAAAA,gBAA1C;AAA4DE,EAAAA,gBAA5D;AAA8EU,EAAAA;AAA9E,IAA2G7B,iBAAiB,CAAC8B,OAAnI;AAEP,eAAe9B,iBAAiB,CAAC+B,OAAjC","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const notificationSlice = createSlice({\n    name: 'notifications',\n    initialState: {\n        notificationModalState: false,\n        notificationCreationModalState: false,\n        allNotifications: [],\n        dayNotifications: [],\n        currentDay: '',\n        monthObject: ''\n    },\n    reducers: {\n        createNotification: (state, notificationObj) => {\n            state.allNotifications.push(notificationObj.payload);\n            state.notificationCreationModalState = false;\n            state.notificationModalState = false;\n        },\n        deleteNotification: (state, notificatinoObj) => {\n            /*\n            state.notifications.filter((item) => {\n                return (item.id != notificationId);\n            });*/\n        },\n        editNotification: (state, notificationId) => {\n\n        },\n        changeModalState: (state, monthObject) => {\n            let allNotifications = state.allNotifications;\n\n            state.currentDay = monthObject.payload;\n\n            state.dayNotifications = allNotifications.filter( (notification) => {\n                let notificationDate = new Date(notification.date);\n                let currentDayDate = new Date(state.currentDay);\n\n                return (notificationDate.getFullYear() === currentDayDate.getFullYear() &&\n                notificationDate.getMonth() === currentDayDate.getMonth() &&\n                notificationDate.getDate() === currentDayDate.getDate())\n            });\n\n            state.monthObject = monthObject;\n            state.notificationModalState = !state.notificationModalState;\n        },\n        changeCreationModalState: (state, monthObject) => {\n            state.monthObject = monthObject;\n            state.notificationModalState = false;\n            state.notificationCreationModalState = !state.notificationCreationModalState;\n        }\n    }\n});\n\nexport const { createNotification, deleteNotification, editNotification, changeModalState, changeCreationModalState } = notificationSlice.actions\n\nexport default notificationSlice.reducer"]},"metadata":{},"sourceType":"module"}