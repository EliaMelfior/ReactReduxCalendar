{"ast":null,"code":"var _jsxFileName = \"/home/elia/projects/ReactChallenge/src/components/CalendarNotificationForm.jsx\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport TextField from '@mui/material/TextField';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\nimport { TimePicker } from '@mui/x-date-pickers/TimePicker';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeModalState, changeCreationModalState } from '../reducers/notificationSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CalendarNotificationForm() {\n  _s();\n\n  const open = useSelector(state => state.notifications.notificationCreationModalState);\n  const [country, selectCountry] = React.useState('');\n  const [region, selectRegion] = React.useState('');\n  const [value, setValue] = React.useState(new Date());\n\n  const handleChange = newValue => {\n    setValue(newValue);\n  };\n\n  const dispatch = useDispatch();\n\n  const handleClickOpen = () => {\n    dispatch(changeCreationModalState(\"\"));\n  };\n\n  const handleClose = () => {\n    dispatch(changeCreationModalState(\"\"));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      variant: \"outlined\",\n      onClick: handleClickOpen,\n      children: \"Open form dialog\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: [\"New reminder\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"standard-basic\",\n            label: \"Notification\",\n            variant: \"standard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(LocalizationProvider, {\n            dateAdapter: AdapterDateFns,\n            children: /*#__PURE__*/_jsxDEV(TimePicker, {\n              label: \"Time\",\n              value: value,\n              onChange: handleChange,\n              renderInput: params => /*#__PURE__*/_jsxDEV(TextField, { ...params\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 54\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(CountryDropdown, {\n            value: country,\n            onChange: val => selectCountry(val)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(RegionDropdown, {\n            country: country,\n            value: region,\n            onChange: val => selectRegion(val)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Create Reminder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CalendarNotificationForm, \"Ifv2NWeb1/MlI5MNwGeVHLzPeqU=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = CalendarNotificationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CalendarNotificationForm\");","map":{"version":3,"sources":["/home/elia/projects/ReactChallenge/src/components/CalendarNotificationForm.jsx"],"names":["React","Box","Button","Dialog","DialogActions","DialogContent","DialogTitle","TextField","AdapterDateFns","LocalizationProvider","CountryDropdown","RegionDropdown","CountryRegionData","TimePicker","useSelector","useDispatch","changeModalState","changeCreationModalState","CalendarNotificationForm","open","state","notifications","notificationCreationModalState","country","selectCountry","useState","region","selectRegion","value","setValue","Date","handleChange","newValue","dispatch","handleClickOpen","handleClose","params","val"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport TextField from '@mui/material/TextField';\nimport { AdapterDateFns } from '@mui/x-date-pickers/AdapterDateFns';\nimport { LocalizationProvider } from '@mui/x-date-pickers/LocalizationProvider';\nimport { CountryDropdown, RegionDropdown, CountryRegionData } from 'react-country-region-selector';\n\nimport { TimePicker } from '@mui/x-date-pickers/TimePicker';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { changeModalState, changeCreationModalState} from '../reducers/notificationSlice';\n\nexport default function CalendarNotificationForm() {\n    const open = useSelector((state) => state.notifications.notificationCreationModalState);\n    const [country, selectCountry] =  React.useState('');\n    const [region, selectRegion] =  React.useState('');\n\n    const [value, setValue] = React.useState(new Date());\n\n    const handleChange = (newValue) => {\n        setValue(newValue);\n    };\n\n    const dispatch = useDispatch();\n\n    const handleClickOpen = () => {\n        dispatch(changeCreationModalState(\"\"));\n    };\n\n    const handleClose = () => {\n        dispatch(changeCreationModalState(\"\"));\n    };\n\n    return (\n        <div>\n            <Button variant=\"outlined\" onClick={handleClickOpen}>\n            Open form dialog\n            </Button>\n            <Dialog\n            open={open}\n            onClose={handleClose}>\n            <DialogTitle>{\"New reminder\"} </DialogTitle>\n            <DialogContent>\n\n                <div>\n                    <TextField id=\"standard-basic\" label=\"Notification\" variant=\"standard\" />\n\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\n                        <TimePicker\n                            label=\"Time\"\n                            value={value}\n                            onChange={handleChange}\n                            renderInput={(params) => <TextField {...params} />}\n                        />\n                    </LocalizationProvider>\n                    <CountryDropdown\n                        value={country}\n                        onChange={(val) => selectCountry(val)} />\n                    <RegionDropdown\n                        country={country}\n                        value={region}\n                        onChange={(val) => selectRegion(val)} />\n                </div>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose}>Cancel</Button>\n                <Button onClick={handleClose}>Create Reminder</Button>\n            </DialogActions>\n            </Dialog>\n        </div>\n    );\n}"]},"metadata":{},"sourceType":"module"}