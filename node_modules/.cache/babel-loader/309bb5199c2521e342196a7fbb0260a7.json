{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport const notificationSlice = createSlice({\n  name: 'notifications',\n  initialState: {\n    notificationModalState: false,\n    notificationCreationModalState: false,\n    allNotifications: [],\n    dayNotifications: [],\n    currentDay: '',\n    monthObject: ''\n  },\n  reducers: {\n    createNotification: (state, notificationObj) => {\n      state.allNotifications.push(notificationObj);\n    },\n    deleteNotification: (state, notificatinoObj) => {\n      /*\n      state.notifications.filter((item) => {\n          return (item.id != notificationId);\n      });*/\n    },\n    editNotification: (state, notificationId) => {},\n    changeModalState: (state, monthObject) => {\n      state.currentDay = monthObject.payload;\n      debugger;\n      state.dayNotifications = state.allNotifications.filter(reminder => {});\n      state.monthObject = monthObject;\n      state.notificationModalState = !state.notificationModalState;\n    },\n    changeCreationModalState: (state, monthObject) => {\n      state.monthObject = monthObject;\n      state.notificationModalState = false;\n      state.notificationCreationModalState = !state.notificationCreationModalState;\n    }\n  }\n});\nexport const {\n  createNotification,\n  deleteNotification,\n  editNotification,\n  changeModalState,\n  changeCreationModalState\n} = notificationSlice.actions;\nexport default notificationSlice.reducer;","map":{"version":3,"sources":["/home/elia/projects/ReactChallenge/src/reducers/notificationSlice.js"],"names":["createSlice","notificationSlice","name","initialState","notificationModalState","notificationCreationModalState","allNotifications","dayNotifications","currentDay","monthObject","reducers","createNotification","state","notificationObj","push","deleteNotification","notificatinoObj","editNotification","notificationId","changeModalState","payload","filter","reminder","changeCreationModalState","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAO,MAAMC,iBAAiB,GAAGD,WAAW,CAAC;AACzCE,EAAAA,IAAI,EAAE,eADmC;AAEzCC,EAAAA,YAAY,EAAE;AACVC,IAAAA,sBAAsB,EAAE,KADd;AAEVC,IAAAA,8BAA8B,EAAE,KAFtB;AAGVC,IAAAA,gBAAgB,EAAE,EAHR;AAIVC,IAAAA,gBAAgB,EAAE,EAJR;AAKVC,IAAAA,UAAU,EAAE,EALF;AAMVC,IAAAA,WAAW,EAAE;AANH,GAF2B;AAUzCC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,kBAAkB,EAAE,CAACC,KAAD,EAAQC,eAAR,KAA4B;AAC5CD,MAAAA,KAAK,CAACN,gBAAN,CAAuBQ,IAAvB,CAA4BD,eAA5B;AACH,KAHK;AAINE,IAAAA,kBAAkB,EAAE,CAACH,KAAD,EAAQI,eAAR,KAA4B;AAC5C;AACZ;AACA;AACA;AACS,KATK;AAUNC,IAAAA,gBAAgB,EAAE,CAACL,KAAD,EAAQM,cAAR,KAA2B,CAE5C,CAZK;AAaNC,IAAAA,gBAAgB,EAAE,CAACP,KAAD,EAAQH,WAAR,KAAwB;AACtCG,MAAAA,KAAK,CAACJ,UAAN,GAAmBC,WAAW,CAACW,OAA/B;AACA;AACAR,MAAAA,KAAK,CAACL,gBAAN,GAAyBK,KAAK,CAACN,gBAAN,CAAuBe,MAAvB,CAA+BC,QAAD,IAAc,CAEpE,CAFwB,CAAzB;AAGAV,MAAAA,KAAK,CAACH,WAAN,GAAoBA,WAApB;AACAG,MAAAA,KAAK,CAACR,sBAAN,GAA+B,CAACQ,KAAK,CAACR,sBAAtC;AACH,KArBK;AAsBNmB,IAAAA,wBAAwB,EAAE,CAACX,KAAD,EAAQH,WAAR,KAAwB;AAC9CG,MAAAA,KAAK,CAACH,WAAN,GAAoBA,WAApB;AACAG,MAAAA,KAAK,CAACR,sBAAN,GAA+B,KAA/B;AACAQ,MAAAA,KAAK,CAACP,8BAAN,GAAuC,CAACO,KAAK,CAACP,8BAA9C;AACH;AA1BK;AAV+B,CAAD,CAArC;AAwCP,OAAO,MAAM;AAAEM,EAAAA,kBAAF;AAAsBI,EAAAA,kBAAtB;AAA0CE,EAAAA,gBAA1C;AAA4DE,EAAAA,gBAA5D;AAA8EI,EAAAA;AAA9E,IAA2GtB,iBAAiB,CAACuB,OAAnI;AAEP,eAAevB,iBAAiB,CAACwB,OAAjC","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const notificationSlice = createSlice({\n    name: 'notifications',\n    initialState: {\n        notificationModalState: false,\n        notificationCreationModalState: false,\n        allNotifications: [],\n        dayNotifications: [],\n        currentDay: '',\n        monthObject: ''\n    },\n    reducers: {\n        createNotification: (state, notificationObj) => {\n            state.allNotifications.push(notificationObj);\n        },\n        deleteNotification: (state, notificatinoObj) => {\n            /*\n            state.notifications.filter((item) => {\n                return (item.id != notificationId);\n            });*/\n        },\n        editNotification: (state, notificationId) => {\n\n        },\n        changeModalState: (state, monthObject) => {\n            state.currentDay = monthObject.payload;\n            debugger;\n            state.dayNotifications = state.allNotifications.filter((reminder) => {\n                \n            });\n            state.monthObject = monthObject;\n            state.notificationModalState = !state.notificationModalState;\n        },\n        changeCreationModalState: (state, monthObject) => {\n            state.monthObject = monthObject;\n            state.notificationModalState = false;\n            state.notificationCreationModalState = !state.notificationCreationModalState;\n        }\n    }\n});\n\nexport const { createNotification, deleteNotification, editNotification, changeModalState, changeCreationModalState } = notificationSlice.actions\n\nexport default notificationSlice.reducer"]},"metadata":{},"sourceType":"module"}